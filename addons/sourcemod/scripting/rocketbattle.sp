/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdktools>
#include <adminmenu>


public Plugin:myinfo = 
{
	name = "RocketBattle", 
	author = "BlackSun", 
	description = "Rockts forever!", 
	version = "1.0", 
	url = "sui-clan.ch.tf"
}

new Handle:hAdminMenu = INVALID_HANDLE;
new gameStatus = 0;

public OnPluginStart()
{
	HookEvent("player_spawn", PlayerSpawn, EventHookMode_Pre);
	
	new Handle:topmenu;
	if (LibraryExists("adminmenu") && ((topmenu = GetAdminTopMenu()) != INVALID_HANDLE))
	{
		OnAdminMenuReady(topmenu);
	}
}


public OnAdminMenuReady(Handle:topmenu)
{
	if (topmenu == hAdminMenu)
	{
		return;
	}
	
	hAdminMenu = topmenu;
	
	AddToTopMenu(hAdminMenu, "RocketBattle", TopMenuObject_Category, CategoryHandler, INVALID_TOPMENUOBJECT);
	
	new TopMenuObject:deathmatch_commands = FindTopMenuCategory(hAdminMenu, "RocketBattle");
	
	if (deathmatch_commands == INVALID_TOPMENUOBJECT)
	{
		return;
	}
	
	AddToTopMenu(hAdminMenu, "rb_load", TopMenuObject_Item, RocketBattleLoad, deathmatch_commands, "rb_load", ADMFLAG_CHAT);
	AddToTopMenu(hAdminMenu, "rb_unload", TopMenuObject_Item, RocketBattleUnload, deathmatch_commands, "rb_unload", ADMFLAG_CHAT);
	AddToTopMenu(hAdminMenu, "rb_vote", TopMenuObject_Item, RocketBattleVote, deathmatch_commands, "rb_vote", ADMFLAG_CHAT);
}

public RocketBattleVote(Handle:topmenu, TopMenuAction:action, TopMenuObject:object_id, param, String:buffer[], maxlength)
{
	if (action == TopMenuAction_DisplayOption)
	{
		Format(buffer, maxlength, "Bring Up A Vote");
	}
	else if (action == TopMenuAction_SelectOption)
	{
		StartVote(param, 1);
	}
}


public RocketBattleLoad(Handle:topmenu, TopMenuAction:action, TopMenuObject:object_id, param, String:buffer[], maxlength)
{
	if (action == TopMenuAction_DisplayOption)
	{
		Format(buffer, maxlength, "Start RocketBattle");
	}
	else if (action == TopMenuAction_SelectOption)
	{
		(gameStatus == 0) ? StartGame() : PrintToChat(param, "You already started the game");
	}
}

public RocketBattleUnload(Handle:topmenu, TopMenuAction:action, TopMenuObject:object_id, param, String:buffer[], maxlength)
{
	if (action == TopMenuAction_DisplayOption)
	{
		Format(buffer, maxlength, "Stop RocketBattle");
	}
	else if (action == TopMenuAction_SelectOption)
	{
		(gameStatus == 1) ? EndGame() : PrintToChat(param, "You already stopped the game");
	}
}


public Action:StartVote(client, args)
{
	if (IsVoteInProgress())
	{
		return Plugin_Handled;
	}
	
	if (gameStatus == 0)
	{
		new Handle:vote = CreateMenu(VoteHandler);
		SetMenuTitle(vote, "Would you like to start RocketBattle?");
		
		AddMenuItem(vote, "1", "Yes");
		AddMenuItem(vote, "2", "No");
		
		VoteMenuToAll(vote, 20);
	}
	
	return Plugin_Handled;
}

public VoteHandler(Handle:voting, MenuAction:action, param1, param2)
{
	if (action == MenuAction_End)
	{
		CloseHandle(voting);
	}
	else if (action == MenuAction_VoteEnd)
	{
		if (param1 == 0)
		{
			PrintToChatAll("Vote successful!");
			StartGame();
		}
		else
		{
			PrintToChatAll("Vote failed!");
		}
	}
}

public CategoryHandler(Handle:topmenu, TopMenuAction:action, TopMenuObject:object_id, param, String:buffer[], maxlength)
{
	if (action == TopMenuAction_DisplayTitle)
	{
		Format(buffer, maxlength, "RocketBattle");
	}
	else if (action == TopMenuAction_DisplayOption)
	{
		Format(buffer, maxlength, "RocketBattle");
	}
}


public OnLibraryRemoved(const String:name[])
{
	if (StrEqual(name, "adminmenu"))
	{
		hAdminMenu = INVALID_HANDLE;
	}
}

public Action:PlayerSpawn(Handle:event, const String:name[], bool:dontBroadcast)
{
	if (gameStatus == 1)
	{
		new player = GetClientOfUserId(GetEventInt(event, "userid"));
		
		SetPlayersHealth(player);
		RemoveWeapons(player);
		GiveRocket(player);
	}
}

SetPlayersHealth(player)
{
	SetEntProp(player, Prop_Send, "m_iHealth", 200);
}

RemoveWeapons(player)
{
	for (new i = 0; i < 4; i++)
	{
		new entity = GetPlayerWeaponSlot(player, i);
		
		if (entity != -1)
		{
			RemovePlayerItem(player, entity);
			RemoveEdict(entity);
		}
	}
}

GiveRocket(player)
{
	GivePlayerItem(player, "weapon_bazooka");
	
	new ammo_offset = FindSendPropOffs("CDODPlayer", "m_iAmmo");
	SetEntData(player, ammo_offset + 48, 200, 4, true);
}

StartGame()
{
	PrintDeveloperInfo();
	gameStatus = 1;
	ServerCommand("sm plugins unload SUISpawnProtection.smx");
	for (new i = 1; i < GetMaxClients(); i++)
	{
		if (IsClientInGame(i) && IsPlayerAlive(i))
		{
			SetPlayersHealth(i);
			RemoveWeapons(i);
			GiveRocket(i);
		}
	}
}


PrintDeveloperInfo()
{
	PrintToChatAll("\x01\x05RocketBattle \x01has been started");
	PrintToChatAll("\x01developed by: \x05[SUI] BlackSun");
	PrintToChatAll("\x01Visit \x05www.sui-clan.ch.tf \x01for more cool stuff.");
}

EndGame()
{
	gameStatus = 0;
	ServerCommand("sm plugins load SUISpawnProtection.smx");
} 